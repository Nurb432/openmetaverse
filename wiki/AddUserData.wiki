#summary Create or update user account information.
#labels Protocol-User

= Request Format =

|| *Parameter* || *Description* || *Type* || *Required* ||
||`RequestMethod`||AddUserData||String||Yes||
||`ID`||UUID of the user to create or update information for||UUID||Yes||
|| *`Variable Fields`* ||Free form key value pairs|| *`*`* ||Yes||

  * User accounts are defined as a collection of arbitrary key/value pairs, with one exception. All user accounts must have a non-empty value stored for Name, which is the key used to determine if an account exists or not. More common examples of key/value pairs are given below.
  * Values are stored as free form strings, but applications should enforce more strict type checking for each key
  * Set a key to an empty string to remove the key/value pair
  * Do not use this method to store login credentials such as a password hash. Use the AddIdentity method instead

|| *Parameter* || *Description* || *Type* ||
||`Name`||Account name, such as "John Doe"||String||
||`Online`||True if this account is currently logged in||Boolean||
||`Email`||User's primary e-mail address||String||
||`CreationDate`||UTC timestamp when this account was created||UTC Timestamp||
||`LastLoginDate`||UTC timestamp when this account last logged in||UTC Timestamp||
||`HomeLocation`||Uri describing this account's home location||Uri||
||`LastLocation`||Uri describing this account's last known location||Uri||
||`Suspended`||True if this account is currently suspended||Boolean||

{{{
RequestMethod=AddUserData
&ID=efb00dbb-d4ab-46dc-aebc-4ba83288c3c0
&Name=John+Doe
&Email=john.doe%40email.com
&Online=1
}}}

= Response Format =

|| *Parameter* || *Description* || *Type* ||
||`Success`||True if the request succeeded, False if a Message was returned||Boolean||
||`Message`||Error message||String||

Success:

{{{
{
    "Success":"true",
}
}}}

Failure:

{{{
{
    "Success":"false",
    "Message:"Cannot go online, user is suspended"
}
}}}