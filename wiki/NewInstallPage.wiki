#summary Installing, configuring, and running the SimianGrid Services

= Installation =
== A word about dependencies ==
Make sure you have the all of the prerequisites installed. These will vary based on Operating System and Operating System version. Only a few linux distributions have seen deployments; they are listed below with the commands to install their dependencies:

  _Debian/Ubuntu_:
    `apt-get install apache2 php5 php5-mysql php5-curl php5-gd php5-xmlrpc mysql-server`

  _OpenSUSE_:
    `zypper install apache2 php5 php5-mysql php5-curl php5-gd php5-xmlrpc php5-openssl mysql`

Note: fairly recent linux distros are required, or must otherwise be made to supply php 5.3 and mysql 5.1

Windows has seen successful deployments using both XAMP and manually installed apache2/php5/mysql.

== MySQL Tuning ==

You will want to add the following to your MySQL's 'My.cnf'. If the section `[mysqld]` already exists, just add the max_allowed_packet directive to it:

`[mysqld]`
   `max_allowed_packet=16M`



= Services Overview =

Simian Grid Services currently come in a set of three. These are GridFrontend, Grid, and GridWebDAV. These services provide a grid user account management interface (including a user/grid management interface for those with suitable access), a Grid backend, which provides various services that comprise a grid in the OpenSimulator technology paradigm, including inventory, assets, user accounts, region registration, and others; and finally some limited WebDAV inventory management functionality.


= Installation Overview =

In the course of installation, you will address the following basic concerns to get Simian Grid Services up and running on an apache web server.

 o Getting the Simian Grid Services

 o Placing the Installer in the Apache Server Path

 o Establishing Database and Database Credentials

 o Setting Permissions

 o Running the installer

 o Testing/Using Simian Grid Services


== Getting the Simian Grid Services ==

How you get Simian Grid Services will depend on who you are. If you are obtaining it as an end user, you will want to obtain the distribution release package from the OpenMetaverse Foundation website. If you are a  developer, you will need to prepare for git repository use (if you haven't already), and obtain the code from the OpenMetaverse Foundation GitHub site.

The distribution release package can be found at:
{{{
http://wheresmyfiles.com/download/me/some/simiangrid.php
}}}

and the source code repository is at:
{{{
git clone http://github.com/openmetaversefoundation/simiangrid.git
}}}

== Unpacking Simian Grid Services ==

If you are working as a developer (i.e., with a git repository), you will need to enter your repository and make an archive of your branch. Consult the git documentation for how to accomplish this, if you don't already know. The output of this process will produce a file not unlike the distribution, which may be unpacked in the same manner as described subsequently for the end user.

Where you unpack the archive is of critical importance. It must be in a web server's document tree in a path on the tree over which you have administrative control. This can be in your public_html folder or in the server's primary document path, but you must have the ability to create files and allocate permissions. It is of considerable importance that you be able to specify this path accurately in future steps. These instructions will assume you have root access to an apache server that lives in /var/www/ on a linux box, and that you will install into the Document Root (/var/www/htdocs/).

Unpack the archive into /var/www/htdocs/. It will produce a number of files and directories there.

Having successfully unpacked the archive, you are now ready to change the ownership and allocate permissions. If you are installing on windows, you probably wont have to perform this step, but if you do, the key is to give the web server the permissions it needs to write files in the document root. This permission can be revoked once the Simian Grid Services are configured.

Each service uses the same installer code. Installing each is just a matter of opening the correct URL for each service in a browser. But before we do that we must set the permissions. 


== Establishing Database and Database Credentials ==

Before running the installer, the database environment must be prepared. This is a relatively minor database administration task, and most opensim operators are probably familiar with the operation. If you are not, you should be. I will cover the high points, but will not get too deeply into it - rather, I would refer you to the MySQL documentation at http://dev.mysql.com

There are two minimum requirements:

o a MySQL database user
o a database that user can access

In this minimalist scenario a single database will hold a common tablespace for all of the services we install. However, one might break the tablespace logically into seperate databases, i.e., one each for each of the services; additionally, one could have a user per-service as well.




== Setting Permissions ==

 execute '`chown -R www-data:www-data/var/www/htdocs/*`'

The user and group may differ on your linux distribution, but as noted for windows users, the key is to make the document root writable by the web server. This is so that the installer script can write the operational parameters collected in the interface into your service configurations. Once installation has been completed, standard operating procedures/best practices can be employed to lock down the system as you would any web service environment.


= SimianGrid =


  # Visit Grid/install.php (relative to where you copied the Simian directory previously) and follow through the installation steps. This helper will create config files, load database schemas and fixtures and check for file and directory permissions where required.
# After running the installer, you may wish to remove write permissions from the config files.
  # Visit the URL that SimianGrid is installed at. If everything is working correctly it should print out `SimianGrid`. If you receive a blank page or an error, check for a log file in the `logs/` directory or your Apache error log.

== SimianGridFrontend ==

!SimianGridFrontend is a user-facing web portal for your world that provides user creation and account management, grid administration, and web-based world login. Currently, !SimianGridFrontend is required to import the default asset set into !SimianGrid.

 # Visit GridFrontend/install.php (relative to where you copied the Simian directory previously) and follow through the installation steps. This helper will create config files, load database schemas and fixtures and check for file and directory permissions where required.
# After running the installer, you may wish to remove write permissions from the config files.
  # Go to the starting page for !SimianGridFrontend and verify that it works. Next, try creating a user account and logging in and logging out.


== Running with !OpenSim ==

  # Once you have configured your !OpenSim.ini file to use the !SimianGrid.ini include, and modified your !GridCommon.ini file with the !SimianGrid service URLs (look at !SimianGrid.ini for example URLs), you should be able to start one or more !OpenSim regions that will register themselves with the grid service.
  # You can now login with an !OpenSim-compatible viewer. If you installed !SimianGrid at `http://www.mygrid.com/`, launch your viewer with:

{{{
-loginuri http://www.mygrid.com/login/
}}}

 (note the trailing slash). You may need to append index.php to the end of the loginuri if your web server is not configured to serve up php files by default.


== Troubleshooting ==

Problem: Web server logs report "PHP Fatal error:  Call to undefined function openssl_random_pseudo_bytes()".

Solution: Verify you have PHP >= 5.3 installed.  Verify that the OpenSSL extension is enabled for PHP (e.g. `extension=openssl.so` in php.ini), even if you're not using HTTP over SSL/TLS.